<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project default="all" name="Create Runnable Jar for Project vna-j with Jar-in-Jar Loader">
	<taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask" />
	<taskdef resource="net/sf/antcontrib/antcontrib.properties" />

	
	<target name="SysDLL">
		<copy todir="${targetDir}" file="index.php" />
	</target>

	<target name="Batch1">
		<property name="exportSampleDir" value="C:/Users/dietmar/vnaJ.3.3/export"/>
		<property name="calibrationSampleFile" value="C:/Users/dietmar/vnaJ.3.3/calibration/REFL_miniVNA-pro2.2.cal"/>
		<property name="exportSampleFile" value="VNA_{0,date,yyMMdd}_{0,time,HHmmss}" />
		<echo file="${targetDir}/${Batch1}" append="false" message="" />
		<echo file="${targetDir}/${Batch1}" append="true" message="@echo off                                    ${line.separator}" />
		<echo file="${targetDir}/${Batch1}" append="true" message="rem (c) DL2SBA 2014                          ${line.separator}" />
		<echo file="${targetDir}/${Batch1}" append="true" message="if not exist ${JarFile} goto err1            ${line.separator}" />
		<echo file="${targetDir}/${Batch1}" append="true" message="                                             ${line.separator}" />
		<echo file="${targetDir}/${Batch1}" append="true" message="java -Dfstart=1000000 -Dfstop=30000000 -Dfsteps=500 -DdriverId=50 -DdriverPort=COM11 -Daverage=1 -Dcalfile=${calibrationSampleFile} -Dscanmode=REFL -Dexports=csv,snp,xml,xls,zplots -DexportDirectory=${exportSampleDir} -DexportFilename=${exportSampleFile} -DkeepGeneratorOn -DnumberOfScans=3 -jar ${JarFile}${line.separator}" />
		<echo file="${targetDir}/${Batch1}" append="true" message="if errorlevel 3 (							${line.separator}" />
		<echo file="${targetDir}/${Batch1}" append="true" message="   echo *** error executing scan				${line.separator}" />
		<echo file="${targetDir}/${Batch1}" append="true" message="   goto end									${line.separator}" />
		<echo file="${targetDir}/${Batch1}" append="true" message=")											${line.separator}" />
		<echo file="${targetDir}/${Batch1}" append="true" message="if errorlevel 2 (							${line.separator}" />
		<echo file="${targetDir}/${Batch1}" append="true" message="   echo *** error initializing log			${line.separator}" />
		<echo file="${targetDir}/${Batch1}" append="true" message="   goto end									${line.separator}" />
		<echo file="${targetDir}/${Batch1}" append="true" message=")											${line.separator}" />
		<echo file="${targetDir}/${Batch1}" append="true" message="if errorlevel 1 (							${line.separator}" />
		<echo file="${targetDir}/${Batch1}" append="true" message="   echo *** invalid start parameter			${line.separator}" />
		<echo file="${targetDir}/${Batch1}" append="true" message="   goto end									${line.separator}" />
		<echo file="${targetDir}/${Batch1}" append="true" message=")											${line.separator}" />
		<echo file="${targetDir}/${Batch1}" append="true" message="goto end                                     ${line.separator}" />
		<echo file="${targetDir}/${Batch1}" append="true" message="                                             ${line.separator}" />
		<echo file="${targetDir}/${Batch1}" append="true" message=":err1                                        ${line.separator}" />
		<echo file="${targetDir}/${Batch1}" append="true" message="echo !!! ------------------------------------${line.separator}" />
		<echo file="${targetDir}/${Batch1}" append="true" message="echo !!! program file ${JarFile} missing     ${line.separator}" />
		<echo file="${targetDir}/${Batch1}" append="true" message="echo !!! aborting                            ${line.separator}" />
		<echo file="${targetDir}/${Batch1}" append="true" message="pause                                        ${line.separator}" />
		<echo file="${targetDir}/${Batch1}" append="true" message="goto end                                     ${line.separator}" />
		<echo file="${targetDir}/${Batch1}" append="true" message="                                             ${line.separator}" />
		<echo file="${targetDir}/${Batch1}" append="true" message=":end                                         ${line.separator}" />
		
		
			
	</target>

	<target name="createApplication" depends="init,SysDLL,Batch1">
		<copy tofile="${targetDir}/${Readme}" file="../vna-j/src/krause/vna/resources/readme.html" />

		<jar destfile="${targetDir}/${JarFile}">
			<manifest>
				<attribute name="Main-Class" value="org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader" />
				<attribute name="Rsrc-Main-Class" value="krause.vna.headless.VNAHeadless" />
				<attribute name="Class-Path" value="." />
				<attribute name="Rsrc-Class-Path"
						value="./ AppleJavaExtensions.jar jdom-1.1.2.jar jcommon-1.0.17.jar jfreechart-1.0.13.jar poi-3.7-20101029.jar iText-2.1.5.jar commons-lang3-3.1.jar commons-math3-3.6.1-tools.jar commons-math3-3.6.1.jar ${JNA} ${PureJavaComm} " />

			</manifest>
			<fileset dir="../krause-common/bin" />
			<fileset dir="../vna-j/bin" />
			<fileset dir="../vna-j-minivna/bin" />
			<fileset dir="../vna-j-minivna-lf/bin" />
			<fileset dir="../vna-j-minivnapro/bin" />
			<fileset dir="../vna-j-minivnapro-2/bin" />
			<fileset dir="../vna-j-minivnapro-lf/bin" />
			<fileset dir="../vna-j-minivnaproext/bin" />
			<fileset dir="../vna-j-sampledriver/bin" />
			<fileset dir="../vna-j-max6/bin" />
            <fileset dir="../vna-j-max6-500/bin" />
			<fileset dir="../vna-j-metrovna/bin" />   		
			<fileset dir="../vna-j-tinyvna/bin" />   		
			<fileset dir="../vna-j-vnarduino/bin" />   		
			<fileset dir="../vna-j-headless/bin" />   		
			
			<zipfileset src="jar-in-jar-loader.zip" />
			<zipfileset dir="../vna-j-libs/lib" includes="jdom-1.1.2.jar" />
			<zipfileset dir="../vna-j-libs/lib" includes="jcommon-1.0.17.jar" />
			<zipfileset dir="../vna-j-libs/lib" includes="jfreechart-1.0.13.jar" />
			<zipfileset dir="../vna-j-libs/lib" includes="iText-2.1.5.jar" />
			<zipfileset dir="../vna-j-libs/lib" includes="commons-lang3-3.1.jar" />
			<zipfileset dir="../vna-j-libs/lib" includes="commons-math3-3.6.1.jar" />
			<zipfileset dir="../vna-j-libs/lib" includes="commons-math3-3.6.1-tools.jar" />
			<zipfileset dir="../vna-j-libs/lib" includes="poi-3.7-20101029.jar" />
			<zipfileset dir="../vna-j-libs/lib" includes="AppleJavaExtensions.jar" />
			<zipfileset dir="../vna-j-libs/lib" includes="${JNA}" />
			<zipfileset dir="../vna-j-libs/lib" includes="${PureJavaComm}" />
		</jar>
		<checksum file="${targetDir}/${JarFile}" property="jar_checksum" />
	</target>


	<target name="init">
		<loadproperties>
			<file file="../vna-j/src/krause/vna/resources/VNAMessage.properties" />
			<filterchain>
				<linecontains>
					<contains value="Application." />
				</linecontains>
			</filterchain>
		</loadproperties>

		<property name="targetDir" location="output/vnaJ-hl.${Application.version}" />
		<mkdir dir="${targetDir}" />

		<property name="PureJavaComm" value="purejavacomm-1.0.0.jar" />
		<property name="JNA" value="jna-4.3.0.jar" />

		<property name="JarFile" value="vnaJ-hl.${Application.version}.jar" />
		<property name="Batch1" value="start_hl_echo.cmd" />
		<property name="Readme" value="readme.${Application.version}.html" />
	</target>

	<target name="all" depends="createApplication">
		<echo>Created installation package !!! </echo>
	</target>
</project>
